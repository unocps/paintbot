paintbot:
    # The joint state controller handles publishing transforms for any moving joints
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 50

    arm_joint_1_controller:
        type: position_controllers/JointPositionController
        joint: arm_joint_1
    arm_joint_2_controller:
        type: position_controllers/JointPositionController
        joint: arm_joint_2
    arm_joint_3_controller:
        type: position_controllers/JointPositionController
        joint: arm_joint_3
    arm_joint_4_controller:
        type: position_controllers/JointPositionController
        joint: arm_joint_4
    arm_joint_5_controller:
        type: position_controllers/JointPositionController
        joint: arm_joint_5

    # TODO: Add controllers for caster joints (and change caster joints to continuous) to simulate mecanum wheels
    # TODO: Change these to simple velocity controllers
    diff_drive_controller:
        type: diff_drive_controller/DiffDriveController
        publish_rate: 50

        left_wheel: ['wheel_joint_fl', 'wheel_joint_bl']
        right_wheel: ['wheel_joint_fr', 'wheel_joint_br']

        wheel_separation: 0.316

        # Odometry covariances for the encoder output of the robot. These values should
        # be tuned to your robot's sample odometry data, but these values are a good place
        # to start
        pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
        twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

        # Top level frame (link) of the robot description
        base_frame_id: base_link

        # Velocity and acceleration limits for the robot
        linear:
            x:
                has_velocity_limits    : true
                max_velocity           : 0.2   # m/s
                has_acceleration_limits: true
                max_acceleration       : 0.6   # m/s^2
        angular:
            z:
                has_velocity_limits    : true
                max_velocity           : 2.0   # rad/s
                has_acceleration_limits: true
                max_acceleration       : 6.0   # rad/s^2
